Metadata-Version: 2.1
Name: waitress
Version: 2.0.0
Summary: Waitress WSGI server
Home-page: https://github.com/Pylons/waitress
Author: Zope Foundation and Contributors
Author-email: zope-dev@zope.org
Maintainer: Pylons Project
Maintainer-email: pylons-discuss@googlegroups.com
License: ZPL 2.1
Project-URL: Documentation, https://docs.pylonsproject.org/projects/waitress/en/latest/index.html
Project-URL: Changelog, https://docs.pylonsproject.org/projects/waitress/en/latest/index.html#change-history
Project-URL: Issue Tracker, https://github.com/Pylons/waitress/issues
Keywords: waitress wsgi server http
Platform: UNKNOWN
Classifier: Development Status :: 6 - Mature
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Zope Public License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Operating System :: OS Independent
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI
Requires-Python: >=3.6.0
Description-Content-Type: text/x-rst
Provides-Extra: docs
Requires-Dist: Sphinx (>=1.8.1) ; extra == 'docs'
Requires-Dist: docutils ; extra == 'docs'
Requires-Dist: pylons-sphinx-themes (>=1.0.9) ; extra == 'docs'
Provides-Extra: testing
Requires-Dist: pytest ; extra == 'testing'
Requires-Dist: pytest-cover ; extra == 'testing'
Requires-Dist: coverage (>=5.0) ; extra == 'testing'

Waitress
========

.. image:: https://img.shields.io/pypi/v/waitress.svg
    :target: https://pypi.org/project/waitress/
    :alt: latest version of waitress on PyPI

.. image:: https://github.com/Pylons/waitress/workflows/Build%20and%20test/badge.svg
    :target: https://github.com/Pylons/waitress/actions?query=workflow%3A%22Build+and+test%22

.. image:: https://readthedocs.org/projects/waitress/badge/?version=master
        :target: https://docs.pylonsproject.org/projects/waitress/en/master
        :alt: master Documentation Status

.. image:: https://img.shields.io/badge/irc-freenode-blue.svg
        :target: https://webchat.freenode.net/?channels=pyramid
        :alt: IRC Freenode

Waitress is a production-quality pure-Python WSGI server with very acceptable
performance. It has no dependencies except ones which live in the Python
standard library. It runs on CPython on Unix and Windows under Python 3.6+. It
is also known to run on PyPy (version 3.6 compatible) on UNIX. It supports
HTTP/1.0 and HTTP/1.1.

For more information, see the "docs" directory of the Waitress package or visit
https://docs.pylonsproject.org/projects/waitress/en/latest/

2.0.0 (2021-03-07)
------------------

Friendly Reminder
~~~~~~~~~~~~~~~~~

This release still contains a variety of deprecation notices about defaults
that can be set for a variety of options.

Please note that this is your last warning, and you should update your
configuration if you do NOT want to use the new defaults.

See the arguments documentation page for all supported options, and pay
attention to the warnings:

https://docs.pylonsproject.org/projects/waitress/en/stable/arguments.html

Without further ado, here's a short list of great changes thanks to our
contributors!

Bugfixes/Features
~~~~~~~~~~~~~~~~~

- Fix a crash on startup when listening to multiple interfaces.
  See https://github.com/Pylons/waitress/pull/332

- Waitress no longer attempts to guess at what the ``server_name`` should be for
  a listen socket, instead it always use a new adjustment/argument named
  ``server_name``.

  Please see the documentation for ``server_name`` in
  https://docs.pylonsproject.org/projects/waitress/en/latest/arguments.html and
  see https://github.com/Pylons/waitress/pull/329

- Allow tasks to notice if the client disconnected.

  This inserts a callable ``waitress.client_disconnected`` into the environment
  that allows the task to check if the client disconnected while waiting for
  the response at strategic points in the execution and to cancel the
  operation.

  It requires setting the new adjustment ``channel_request_lookahead`` to a value
  larger than 0, which continues to read requests from a channel even if a
  request is already being processed on that channel, up to the given count,
  since a client disconnect is detected by reading from a readable socket and
  receiving an empty result.

  See https://github.com/Pylons/waitress/pull/310

- Drop Python 2.7 and 3.5 support

- The server now issues warning output when it there are enough open
  connections (controlled by "connection_limit"), that it is no longer
  accepting new connections. This situation was previously difficult to
  diagnose.
  See https://github.com/Pylons/waitress/pull/322


